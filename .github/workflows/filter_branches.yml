name: Python adder app w/ approval gate for Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    if: github.event_name == 'push' #only run on push, not on workflow_dispatch
    runs-on: ubuntu-latest
    environment: dev #only development environment secrets and variables are available here; create a dev/prod environemnts and put worker nodes into it.
    steps:
      - uses: action/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies.
        run: |
          python -m pip install --upgrade pip #Upgrade pip
          pip install -r requirements.txt #Install dependencies
  deploy:
    if: github.event_name == 'workflow_dispatch'
    needs: build
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: action/checkout@v4
      - name: Azure Login
        uses: Azure/login@v1.5.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          environment: azurecloud
          allw-no-subscriptions: false
          audience: api://AzureADTokenExchange
          auth-type: SERVICE_PRINCIPAL
# ...
    notify-teams:
      runs-on: ubuntu-latest
      needs: [build, deploy]
      if: always()
      steps:
        - name: Notify teams.
          run: echo "Hello world" > artifact_text.tx
  
#actions/upload-artifact 
#actions/download-artifact
#use default environment variables in a workflow: -> use GITHUB_SHA to tag a built docker image
#run: |
#  docker build -t my-app:${{ github.sha }} . 
# Uses GITHUB_SHA to tag the Docker image

#js vs docker container actions
#actions with inputs and outputs
#inputs, outputs(output1, description; output2,description), runs
#convert bicep template to azure json template

